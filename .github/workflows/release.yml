name: Build and Release

on:
  push:
    tags:
      - "v*"

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install uv
          uv venv .venv
          .venv/Scripts/activate.bat
          python scripts/setup_ffmpeg.py
          cd backend
          uv pip install -r requirements.txt
          cd ../frontend
          npm install

      - name: Build
        run: |
          cd frontend
          npm run electron:build:win

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: frontend/release/**/*.exe

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install uv
          uv venv .venv
          source .venv/bin/activate
          python scripts/setup_ffmpeg.py
          cd backend
          uv pip install -r requirements.txt
          cd ../frontend
          npm install

      - name: Build
        run: |
          cd frontend
          npm run electron:build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifacts
          path: frontend/release/**/*.dmg

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install uv
          uv venv .venv
          source .venv/bin/activate
          python scripts/setup_ffmpeg.py
          cd backend
          uv pip install -r requirements.txt
          cd ../frontend
          npm install

      - name: Build
        run: |
          cd frontend
          npm run electron:build:linux

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          path: |
            frontend/release/**/*.AppImage
            frontend/release/**/*.deb

  create-release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            windows-artifacts/**/*.exe
            macos-artifacts/**/*.dmg
            linux-artifacts/**/*.AppImage
            linux-artifacts/**/*.deb
          draft: false
          prerelease: false
          generate_release_notes: true
